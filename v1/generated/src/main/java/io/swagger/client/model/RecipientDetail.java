/*
 * bizcommserv
 * Business communication serv for Air New Zealand. This REST service supports services like eMail, SMS and chats(user to user & user to group) in the future.
 *
 * OpenAPI spec version: V1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.EmailAddress;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * The list of to,cc,bcc mail Ids that needs to be added
 */
@ApiModel(description = "The list of to,cc,bcc mail Ids that needs to be added")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-12-02T16:32:58.090+13:00")
public class RecipientDetail {
  @SerializedName("to_mail_ids")
  private List<EmailAddress> toMailIds = new ArrayList<EmailAddress>();

  @SerializedName("cc_mail_ids")
  private List<EmailAddress> ccMailIds = new ArrayList<EmailAddress>();

  @SerializedName("bcc_mail_ids")
  private List<Object> bccMailIds = new ArrayList<Object>();

  public RecipientDetail toMailIds(List<EmailAddress> toMailIds) {
    this.toMailIds = toMailIds;
    return this;
  }

  public RecipientDetail addToMailIdsItem(EmailAddress toMailIdsItem) {
    this.toMailIds.add(toMailIdsItem);
    return this;
  }

   /**
   * The &#39;to&#39; list of email Ids to which the email need to be sent.
   * @return toMailIds
  **/
  @ApiModelProperty(required = true, value = "The 'to' list of email Ids to which the email need to be sent.")
  public List<EmailAddress> getToMailIds() {
    return toMailIds;
  }

  public void setToMailIds(List<EmailAddress> toMailIds) {
    this.toMailIds = toMailIds;
  }

  public RecipientDetail ccMailIds(List<EmailAddress> ccMailIds) {
    this.ccMailIds = ccMailIds;
    return this;
  }

  public RecipientDetail addCcMailIdsItem(EmailAddress ccMailIdsItem) {
    this.ccMailIds.add(ccMailIdsItem);
    return this;
  }

   /**
   * The &#39;cc&#39; list of email Ids to which the email need to be sent.
   * @return ccMailIds
  **/
  @ApiModelProperty(required = true, value = "The 'cc' list of email Ids to which the email need to be sent.")
  public List<EmailAddress> getCcMailIds() {
    return ccMailIds;
  }

  public void setCcMailIds(List<EmailAddress> ccMailIds) {
    this.ccMailIds = ccMailIds;
  }

  public RecipientDetail bccMailIds(List<Object> bccMailIds) {
    this.bccMailIds = bccMailIds;
    return this;
  }

  public RecipientDetail addBccMailIdsItem(Object bccMailIdsItem) {
    this.bccMailIds.add(bccMailIdsItem);
    return this;
  }

   /**
   * The &#39;bcc&#39; list of email Ids to which the email need to be sent.
   * @return bccMailIds
  **/
  @ApiModelProperty(required = true, value = "The 'bcc' list of email Ids to which the email need to be sent.")
  public List<Object> getBccMailIds() {
    return bccMailIds;
  }

  public void setBccMailIds(List<Object> bccMailIds) {
    this.bccMailIds = bccMailIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecipientDetail recipientDetail = (RecipientDetail) o;
    return Objects.equals(this.toMailIds, recipientDetail.toMailIds) &&
        Objects.equals(this.ccMailIds, recipientDetail.ccMailIds) &&
        Objects.equals(this.bccMailIds, recipientDetail.bccMailIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(toMailIds, ccMailIds, bccMailIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecipientDetail {\n");
    
    sb.append("    toMailIds: ").append(toIndentedString(toMailIds)).append("\n");
    sb.append("    ccMailIds: ").append(toIndentedString(ccMailIds)).append("\n");
    sb.append("    bccMailIds: ").append(toIndentedString(bccMailIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

